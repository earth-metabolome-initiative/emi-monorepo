#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum PromethiumIsotope {
    Pm126,
    Pm127,
    Pm128,
    Pm129,
    Pm130,
    Pm131,
    Pm132,
    Pm133,
    Pm134,
    Pm135,
    Pm136,
    Pm137,
    Pm138,
    Pm139,
    Pm140,
    Pm141,
    Pm142,
    Pm143,
    Pm144,
    Pm145,
    Pm146,
    Pm147,
    Pm148,
    Pm149,
    Pm150,
    Pm151,
    Pm152,
    Pm153,
    Pm154,
    Pm155,
    Pm156,
    Pm157,
    Pm158,
    Pm159,
    Pm160,
    Pm161,
    Pm162,
    Pm163,
}
impl super::RelativeAtomicMass for PromethiumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Pm126 => 125.95792f64,
            Self::Pm127 => 126.95192f64,
            Self::Pm128 => 127.9487f64,
            Self::Pm129 => 128.94323f64,
            Self::Pm130 => 129.94053f64,
            Self::Pm131 => 130.93567f64,
            Self::Pm132 => 131.93384f64,
            Self::Pm133 => 132.929782f64,
            Self::Pm134 => 133.928353f64,
            Self::Pm135 => 134.924823f64,
            Self::Pm136 => 135.923585f64,
            Self::Pm137 => 136.92048f64,
            Self::Pm138 => 137.919548f64,
            Self::Pm139 => 138.9168f64,
            Self::Pm140 => 139.91604f64,
            Self::Pm141 => 140.913555f64,
            Self::Pm142 => 141.91289f64,
            Self::Pm143 => 142.9109383f64,
            Self::Pm144 => 143.9125964f64,
            Self::Pm145 => 144.9127559f64,
            Self::Pm146 => 145.9147024f64,
            Self::Pm147 => 146.915145f64,
            Self::Pm148 => 147.9174819f64,
            Self::Pm149 => 148.9183423f64,
            Self::Pm150 => 149.920991f64,
            Self::Pm151 => 150.9212175f64,
            Self::Pm152 => 151.923506f64,
            Self::Pm153 => 152.9241567f64,
            Self::Pm154 => 153.926472f64,
            Self::Pm155 => 154.928137f64,
            Self::Pm156 => 155.9311175f64,
            Self::Pm157 => 156.9331214f64,
            Self::Pm158 => 157.936565f64,
            Self::Pm159 => 158.939287f64,
            Self::Pm160 => 159.9431f64,
            Self::Pm161 => 160.94607f64,
            Self::Pm162 => 161.95022f64,
            Self::Pm163 => 162.95357f64,
        }
    }
}
impl super::ElementVariant for PromethiumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Pm
    }
}
impl super::MassNumber for PromethiumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Pm126 => 126u16,
            Self::Pm127 => 127u16,
            Self::Pm128 => 128u16,
            Self::Pm129 => 129u16,
            Self::Pm130 => 130u16,
            Self::Pm131 => 131u16,
            Self::Pm132 => 132u16,
            Self::Pm133 => 133u16,
            Self::Pm134 => 134u16,
            Self::Pm135 => 135u16,
            Self::Pm136 => 136u16,
            Self::Pm137 => 137u16,
            Self::Pm138 => 138u16,
            Self::Pm139 => 139u16,
            Self::Pm140 => 140u16,
            Self::Pm141 => 141u16,
            Self::Pm142 => 142u16,
            Self::Pm143 => 143u16,
            Self::Pm144 => 144u16,
            Self::Pm145 => 145u16,
            Self::Pm146 => 146u16,
            Self::Pm147 => 147u16,
            Self::Pm148 => 148u16,
            Self::Pm149 => 149u16,
            Self::Pm150 => 150u16,
            Self::Pm151 => 151u16,
            Self::Pm152 => 152u16,
            Self::Pm153 => 153u16,
            Self::Pm154 => 154u16,
            Self::Pm155 => 155u16,
            Self::Pm156 => 156u16,
            Self::Pm157 => 157u16,
            Self::Pm158 => 158u16,
            Self::Pm159 => 159u16,
            Self::Pm160 => 160u16,
            Self::Pm161 => 161u16,
            Self::Pm162 => 162u16,
            Self::Pm163 => 163u16,
        }
    }
}
impl super::IsotopicComposition for PromethiumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Pm126 => None,
            Self::Pm127 => None,
            Self::Pm128 => None,
            Self::Pm129 => None,
            Self::Pm130 => None,
            Self::Pm131 => None,
            Self::Pm132 => None,
            Self::Pm133 => None,
            Self::Pm134 => None,
            Self::Pm135 => None,
            Self::Pm136 => None,
            Self::Pm137 => None,
            Self::Pm138 => None,
            Self::Pm139 => None,
            Self::Pm140 => None,
            Self::Pm141 => None,
            Self::Pm142 => None,
            Self::Pm143 => None,
            Self::Pm144 => None,
            Self::Pm145 => None,
            Self::Pm146 => None,
            Self::Pm147 => None,
            Self::Pm148 => None,
            Self::Pm149 => None,
            Self::Pm150 => None,
            Self::Pm151 => None,
            Self::Pm152 => None,
            Self::Pm153 => None,
            Self::Pm154 => None,
            Self::Pm155 => None,
            Self::Pm156 => None,
            Self::Pm157 => None,
            Self::Pm158 => None,
            Self::Pm159 => None,
            Self::Pm160 => None,
            Self::Pm161 => None,
            Self::Pm162 => None,
            Self::Pm163 => None,
        }
    }
}
impl super::MostCommonIsotope for PromethiumIsotope {
    fn most_common_isotope() -> Self {
        Self::Pm163
    }
}
