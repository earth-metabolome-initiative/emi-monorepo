#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum BismuthIsotope {
    Bi184,
    Bi185,
    Bi186,
    Bi187,
    Bi188,
    Bi189,
    Bi190,
    Bi191,
    Bi192,
    Bi193,
    Bi194,
    Bi195,
    Bi196,
    Bi197,
    Bi198,
    Bi199,
    Bi200,
    Bi201,
    Bi202,
    Bi203,
    Bi204,
    Bi205,
    Bi206,
    Bi207,
    Bi208,
    Bi209,
    Bi210,
    Bi211,
    Bi212,
    Bi213,
    Bi214,
    Bi215,
    Bi216,
    Bi217,
    Bi218,
    Bi219,
    Bi220,
    Bi221,
    Bi222,
    Bi223,
    Bi224,
}
impl super::RelativeAtomicMass for BismuthIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Bi184 => 184.001275f64,
            Self::Bi185 => 184.9976f64,
            Self::Bi186 => 185.996644f64,
            Self::Bi187 => 186.993147f64,
            Self::Bi188 => 187.992287f64,
            Self::Bi189 => 188.989195f64,
            Self::Bi190 => 189.988622f64,
            Self::Bi191 => 190.9857866f64,
            Self::Bi192 => 191.985469f64,
            Self::Bi193 => 192.98296f64,
            Self::Bi194 => 193.982785f64,
            Self::Bi195 => 194.9806488f64,
            Self::Bi196 => 195.980667f64,
            Self::Bi197 => 196.9788651f64,
            Self::Bi198 => 197.979206f64,
            Self::Bi199 => 198.977673f64,
            Self::Bi200 => 199.978131f64,
            Self::Bi201 => 200.97701f64,
            Self::Bi202 => 201.977734f64,
            Self::Bi203 => 202.976893f64,
            Self::Bi204 => 203.9778361f64,
            Self::Bi205 => 204.9773867f64,
            Self::Bi206 => 205.9784993f64,
            Self::Bi207 => 206.978471f64,
            Self::Bi208 => 207.9797425f64,
            Self::Bi209 => 208.9803991f64,
            Self::Bi210 => 209.9841207f64,
            Self::Bi211 => 210.9872697f64,
            Self::Bi212 => 211.991286f64,
            Self::Bi213 => 212.9943851f64,
            Self::Bi214 => 213.998712f64,
            Self::Bi215 => 215.00177f64,
            Self::Bi216 => 216.006306f64,
            Self::Bi217 => 217.009372f64,
            Self::Bi218 => 218.014188f64,
            Self::Bi219 => 219.01748f64,
            Self::Bi220 => 220.02235f64,
            Self::Bi221 => 221.02587f64,
            Self::Bi222 => 222.03078f64,
            Self::Bi223 => 223.0345f64,
            Self::Bi224 => 224.03947f64,
        }
    }
}
impl super::ElementVariant for BismuthIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Bi
    }
}
impl super::MassNumber for BismuthIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Bi184 => 184u16,
            Self::Bi185 => 185u16,
            Self::Bi186 => 186u16,
            Self::Bi187 => 187u16,
            Self::Bi188 => 188u16,
            Self::Bi189 => 189u16,
            Self::Bi190 => 190u16,
            Self::Bi191 => 191u16,
            Self::Bi192 => 192u16,
            Self::Bi193 => 193u16,
            Self::Bi194 => 194u16,
            Self::Bi195 => 195u16,
            Self::Bi196 => 196u16,
            Self::Bi197 => 197u16,
            Self::Bi198 => 198u16,
            Self::Bi199 => 199u16,
            Self::Bi200 => 200u16,
            Self::Bi201 => 201u16,
            Self::Bi202 => 202u16,
            Self::Bi203 => 203u16,
            Self::Bi204 => 204u16,
            Self::Bi205 => 205u16,
            Self::Bi206 => 206u16,
            Self::Bi207 => 207u16,
            Self::Bi208 => 208u16,
            Self::Bi209 => 209u16,
            Self::Bi210 => 210u16,
            Self::Bi211 => 211u16,
            Self::Bi212 => 212u16,
            Self::Bi213 => 213u16,
            Self::Bi214 => 214u16,
            Self::Bi215 => 215u16,
            Self::Bi216 => 216u16,
            Self::Bi217 => 217u16,
            Self::Bi218 => 218u16,
            Self::Bi219 => 219u16,
            Self::Bi220 => 220u16,
            Self::Bi221 => 221u16,
            Self::Bi222 => 222u16,
            Self::Bi223 => 223u16,
            Self::Bi224 => 224u16,
        }
    }
}
impl super::IsotopicComposition for BismuthIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Bi184 => None,
            Self::Bi185 => None,
            Self::Bi186 => None,
            Self::Bi187 => None,
            Self::Bi188 => None,
            Self::Bi189 => None,
            Self::Bi190 => None,
            Self::Bi191 => None,
            Self::Bi192 => None,
            Self::Bi193 => None,
            Self::Bi194 => None,
            Self::Bi195 => None,
            Self::Bi196 => None,
            Self::Bi197 => None,
            Self::Bi198 => None,
            Self::Bi199 => None,
            Self::Bi200 => None,
            Self::Bi201 => None,
            Self::Bi202 => None,
            Self::Bi203 => None,
            Self::Bi204 => None,
            Self::Bi205 => None,
            Self::Bi206 => None,
            Self::Bi207 => None,
            Self::Bi208 => None,
            Self::Bi209 => Some(1f64),
            Self::Bi210 => None,
            Self::Bi211 => None,
            Self::Bi212 => None,
            Self::Bi213 => None,
            Self::Bi214 => None,
            Self::Bi215 => None,
            Self::Bi216 => None,
            Self::Bi217 => None,
            Self::Bi218 => None,
            Self::Bi219 => None,
            Self::Bi220 => None,
            Self::Bi221 => None,
            Self::Bi222 => None,
            Self::Bi223 => None,
            Self::Bi224 => None,
        }
    }
}
impl super::MostCommonIsotope for BismuthIsotope {
    fn most_common_isotope() -> Self {
        Self::Bi209
    }
}
