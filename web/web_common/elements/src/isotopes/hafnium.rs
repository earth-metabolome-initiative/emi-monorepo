#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum HafniumIsotope {
    Hf153,
    Hf154,
    Hf155,
    Hf156,
    Hf157,
    Hf158,
    Hf159,
    Hf160,
    Hf161,
    Hf162,
    Hf163,
    Hf164,
    Hf165,
    Hf166,
    Hf167,
    Hf168,
    Hf169,
    Hf170,
    Hf171,
    Hf172,
    Hf173,
    Hf174,
    Hf175,
    Hf176,
    Hf177,
    Hf178,
    Hf179,
    Hf180,
    Hf181,
    Hf182,
    Hf183,
    Hf184,
    Hf185,
    Hf186,
    Hf187,
    Hf188,
    Hf189,
}
impl super::RelativeAtomicMass for HafniumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Hf153 => 152.97069f64,
            Self::Hf154 => 153.96486f64,
            Self::Hf155 => 154.96311f64,
            Self::Hf156 => 155.95935f64,
            Self::Hf157 => 156.95824f64,
            Self::Hf158 => 157.954801f64,
            Self::Hf159 => 158.953996f64,
            Self::Hf160 => 159.950691f64,
            Self::Hf161 => 160.950278f64,
            Self::Hf162 => 161.9472148f64,
            Self::Hf163 => 162.947113f64,
            Self::Hf164 => 163.944371f64,
            Self::Hf165 => 164.944567f64,
            Self::Hf166 => 165.94218f64,
            Self::Hf167 => 166.9426f64,
            Self::Hf168 => 167.940568f64,
            Self::Hf169 => 168.941259f64,
            Self::Hf170 => 169.939609f64,
            Self::Hf171 => 170.940492f64,
            Self::Hf172 => 171.93945f64,
            Self::Hf173 => 172.940513f64,
            Self::Hf174 => 173.9400461f64,
            Self::Hf175 => 174.9415092f64,
            Self::Hf176 => 175.9414076f64,
            Self::Hf177 => 176.9432277f64,
            Self::Hf178 => 177.9437058f64,
            Self::Hf179 => 178.9458232f64,
            Self::Hf180 => 179.946557f64,
            Self::Hf181 => 180.9491083f64,
            Self::Hf182 => 181.9505612f64,
            Self::Hf183 => 182.95353f64,
            Self::Hf184 => 183.955446f64,
            Self::Hf185 => 184.958862f64,
            Self::Hf186 => 185.960897f64,
            Self::Hf187 => 186.96477f64,
            Self::Hf188 => 187.96685f64,
            Self::Hf189 => 188.97084f64,
        }
    }
}
impl super::ElementVariant for HafniumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Hf
    }
}
impl super::MassNumber for HafniumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Hf153 => 153u16,
            Self::Hf154 => 154u16,
            Self::Hf155 => 155u16,
            Self::Hf156 => 156u16,
            Self::Hf157 => 157u16,
            Self::Hf158 => 158u16,
            Self::Hf159 => 159u16,
            Self::Hf160 => 160u16,
            Self::Hf161 => 161u16,
            Self::Hf162 => 162u16,
            Self::Hf163 => 163u16,
            Self::Hf164 => 164u16,
            Self::Hf165 => 165u16,
            Self::Hf166 => 166u16,
            Self::Hf167 => 167u16,
            Self::Hf168 => 168u16,
            Self::Hf169 => 169u16,
            Self::Hf170 => 170u16,
            Self::Hf171 => 171u16,
            Self::Hf172 => 172u16,
            Self::Hf173 => 173u16,
            Self::Hf174 => 174u16,
            Self::Hf175 => 175u16,
            Self::Hf176 => 176u16,
            Self::Hf177 => 177u16,
            Self::Hf178 => 178u16,
            Self::Hf179 => 179u16,
            Self::Hf180 => 180u16,
            Self::Hf181 => 181u16,
            Self::Hf182 => 182u16,
            Self::Hf183 => 183u16,
            Self::Hf184 => 184u16,
            Self::Hf185 => 185u16,
            Self::Hf186 => 186u16,
            Self::Hf187 => 187u16,
            Self::Hf188 => 188u16,
            Self::Hf189 => 189u16,
        }
    }
}
impl super::IsotopicComposition for HafniumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Hf153 => None,
            Self::Hf154 => None,
            Self::Hf155 => None,
            Self::Hf156 => None,
            Self::Hf157 => None,
            Self::Hf158 => None,
            Self::Hf159 => None,
            Self::Hf160 => None,
            Self::Hf161 => None,
            Self::Hf162 => None,
            Self::Hf163 => None,
            Self::Hf164 => None,
            Self::Hf165 => None,
            Self::Hf166 => None,
            Self::Hf167 => None,
            Self::Hf168 => None,
            Self::Hf169 => None,
            Self::Hf170 => None,
            Self::Hf171 => None,
            Self::Hf172 => None,
            Self::Hf173 => None,
            Self::Hf174 => Some(0.0016f64),
            Self::Hf175 => None,
            Self::Hf176 => Some(0.0526f64),
            Self::Hf177 => Some(0.186f64),
            Self::Hf178 => Some(0.2728f64),
            Self::Hf179 => Some(0.1362f64),
            Self::Hf180 => Some(0.3508f64),
            Self::Hf181 => None,
            Self::Hf182 => None,
            Self::Hf183 => None,
            Self::Hf184 => None,
            Self::Hf185 => None,
            Self::Hf186 => None,
            Self::Hf187 => None,
            Self::Hf188 => None,
            Self::Hf189 => None,
        }
    }
}
impl super::MostAbundantIsotope for HafniumIsotope {
    fn most_abundant_isotope() -> Self {
        Self::Hf180
    }
}
impl std::fmt::Display for HafniumIsotope {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Self::Hf153 => write!(f, "Hf153"),
            Self::Hf154 => write!(f, "Hf154"),
            Self::Hf155 => write!(f, "Hf155"),
            Self::Hf156 => write!(f, "Hf156"),
            Self::Hf157 => write!(f, "Hf157"),
            Self::Hf158 => write!(f, "Hf158"),
            Self::Hf159 => write!(f, "Hf159"),
            Self::Hf160 => write!(f, "Hf160"),
            Self::Hf161 => write!(f, "Hf161"),
            Self::Hf162 => write!(f, "Hf162"),
            Self::Hf163 => write!(f, "Hf163"),
            Self::Hf164 => write!(f, "Hf164"),
            Self::Hf165 => write!(f, "Hf165"),
            Self::Hf166 => write!(f, "Hf166"),
            Self::Hf167 => write!(f, "Hf167"),
            Self::Hf168 => write!(f, "Hf168"),
            Self::Hf169 => write!(f, "Hf169"),
            Self::Hf170 => write!(f, "Hf170"),
            Self::Hf171 => write!(f, "Hf171"),
            Self::Hf172 => write!(f, "Hf172"),
            Self::Hf173 => write!(f, "Hf173"),
            Self::Hf174 => write!(f, "Hf174"),
            Self::Hf175 => write!(f, "Hf175"),
            Self::Hf176 => write!(f, "Hf176"),
            Self::Hf177 => write!(f, "Hf177"),
            Self::Hf178 => write!(f, "Hf178"),
            Self::Hf179 => write!(f, "Hf179"),
            Self::Hf180 => write!(f, "Hf180"),
            Self::Hf181 => write!(f, "Hf181"),
            Self::Hf182 => write!(f, "Hf182"),
            Self::Hf183 => write!(f, "Hf183"),
            Self::Hf184 => write!(f, "Hf184"),
            Self::Hf185 => write!(f, "Hf185"),
            Self::Hf186 => write!(f, "Hf186"),
            Self::Hf187 => write!(f, "Hf187"),
            Self::Hf188 => write!(f, "Hf188"),
            Self::Hf189 => write!(f, "Hf189"),
        }
    }
}
