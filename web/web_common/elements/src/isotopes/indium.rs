#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum IndiumIsotope {
    In97,
    In98,
    In99,
    In100,
    In101,
    In102,
    In103,
    In104,
    In105,
    In106,
    In107,
    In108,
    In109,
    In110,
    In111,
    In112,
    In113,
    In114,
    In115,
    In116,
    In117,
    In118,
    In119,
    In120,
    In121,
    In122,
    In123,
    In124,
    In125,
    In126,
    In127,
    In128,
    In129,
    In130,
    In131,
    In132,
    In133,
    In134,
    In135,
}
impl super::RelativeAtomicMass for IndiumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::In97 => 96.94934f64,
            Self::In98 => 97.94214f64,
            Self::In99 => 98.93411f64,
            Self::In100 => 99.93096f64,
            Self::In101 => 100.92634f64,
            Self::In102 => 101.9241071f64,
            Self::In103 => 102.9198819f64,
            Self::In104 => 103.9182145f64,
            Self::In105 => 104.914502f64,
            Self::In106 => 105.913464f64,
            Self::In107 => 106.91029f64,
            Self::In108 => 107.9096935f64,
            Self::In109 => 108.9071514f64,
            Self::In110 => 109.90717f64,
            Self::In111 => 110.9051085f64,
            Self::In112 => 111.9055377f64,
            Self::In113 => 112.90406184f64,
            Self::In114 => 113.90491791f64,
            Self::In115 => 114.903878776f64,
            Self::In116 => 115.90525999f64,
            Self::In117 => 116.9045157f64,
            Self::In118 => 117.9063566f64,
            Self::In119 => 118.9058507f64,
            Self::In120 => 119.907967f64,
            Self::In121 => 120.907851f64,
            Self::In122 => 121.910281f64,
            Self::In123 => 122.910434f64,
            Self::In124 => 123.913182f64,
            Self::In125 => 124.913605f64,
            Self::In126 => 125.916507f64,
            Self::In127 => 126.917446f64,
            Self::In128 => 127.9204f64,
            Self::In129 => 128.9218053f64,
            Self::In130 => 129.924977f64,
            Self::In131 => 130.9269715f64,
            Self::In132 => 131.933001f64,
            Self::In133 => 132.93831f64,
            Self::In134 => 133.94454f64,
            Self::In135 => 134.95005f64,
        }
    }
}
impl super::ElementVariant for IndiumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::In
    }
}
impl super::MassNumber for IndiumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::In97 => 97u16,
            Self::In98 => 98u16,
            Self::In99 => 99u16,
            Self::In100 => 100u16,
            Self::In101 => 101u16,
            Self::In102 => 102u16,
            Self::In103 => 103u16,
            Self::In104 => 104u16,
            Self::In105 => 105u16,
            Self::In106 => 106u16,
            Self::In107 => 107u16,
            Self::In108 => 108u16,
            Self::In109 => 109u16,
            Self::In110 => 110u16,
            Self::In111 => 111u16,
            Self::In112 => 112u16,
            Self::In113 => 113u16,
            Self::In114 => 114u16,
            Self::In115 => 115u16,
            Self::In116 => 116u16,
            Self::In117 => 117u16,
            Self::In118 => 118u16,
            Self::In119 => 119u16,
            Self::In120 => 120u16,
            Self::In121 => 121u16,
            Self::In122 => 122u16,
            Self::In123 => 123u16,
            Self::In124 => 124u16,
            Self::In125 => 125u16,
            Self::In126 => 126u16,
            Self::In127 => 127u16,
            Self::In128 => 128u16,
            Self::In129 => 129u16,
            Self::In130 => 130u16,
            Self::In131 => 131u16,
            Self::In132 => 132u16,
            Self::In133 => 133u16,
            Self::In134 => 134u16,
            Self::In135 => 135u16,
        }
    }
}
impl super::IsotopicComposition for IndiumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::In97 => None,
            Self::In98 => None,
            Self::In99 => None,
            Self::In100 => None,
            Self::In101 => None,
            Self::In102 => None,
            Self::In103 => None,
            Self::In104 => None,
            Self::In105 => None,
            Self::In106 => None,
            Self::In107 => None,
            Self::In108 => None,
            Self::In109 => None,
            Self::In110 => None,
            Self::In111 => None,
            Self::In112 => None,
            Self::In113 => Some(0.0429f64),
            Self::In114 => None,
            Self::In115 => Some(0.9571f64),
            Self::In116 => None,
            Self::In117 => None,
            Self::In118 => None,
            Self::In119 => None,
            Self::In120 => None,
            Self::In121 => None,
            Self::In122 => None,
            Self::In123 => None,
            Self::In124 => None,
            Self::In125 => None,
            Self::In126 => None,
            Self::In127 => None,
            Self::In128 => None,
            Self::In129 => None,
            Self::In130 => None,
            Self::In131 => None,
            Self::In132 => None,
            Self::In133 => None,
            Self::In134 => None,
            Self::In135 => None,
        }
    }
}
impl super::MostCommonIsotope for IndiumIsotope {
    fn most_common_isotope() -> Self {
        Self::In115
    }
}
