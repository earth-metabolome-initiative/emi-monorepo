#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum LutetiumIsotope {
    Lu150,
    Lu151,
    Lu152,
    Lu153,
    Lu154,
    Lu155,
    Lu156,
    Lu157,
    Lu158,
    Lu159,
    Lu160,
    Lu161,
    Lu162,
    Lu163,
    Lu164,
    Lu165,
    Lu166,
    Lu167,
    Lu168,
    Lu169,
    Lu170,
    Lu171,
    Lu172,
    Lu173,
    Lu174,
    Lu175,
    Lu176,
    Lu177,
    Lu178,
    Lu179,
    Lu180,
    Lu181,
    Lu182,
    Lu183,
    Lu184,
    Lu185,
}
impl super::RelativeAtomicMass for LutetiumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Lu150 => 149.97355f64,
            Self::Lu151 => 150.96768f64,
            Self::Lu152 => 151.96412f64,
            Self::Lu153 => 152.95875f64,
            Self::Lu154 => 153.95736f64,
            Self::Lu155 => 154.954321f64,
            Self::Lu156 => 155.953033f64,
            Self::Lu157 => 156.950127f64,
            Self::Lu158 => 157.949316f64,
            Self::Lu159 => 158.946636f64,
            Self::Lu160 => 159.946033f64,
            Self::Lu161 => 160.943572f64,
            Self::Lu162 => 161.943283f64,
            Self::Lu163 => 162.941179f64,
            Self::Lu164 => 163.941339f64,
            Self::Lu165 => 164.939407f64,
            Self::Lu166 => 165.939859f64,
            Self::Lu167 => 166.93827f64,
            Self::Lu168 => 167.938736f64,
            Self::Lu169 => 168.9376441f64,
            Self::Lu170 => 169.938478f64,
            Self::Lu171 => 170.937917f64,
            Self::Lu172 => 171.9390891f64,
            Self::Lu173 => 172.938934f64,
            Self::Lu174 => 173.9403409f64,
            Self::Lu175 => 174.9407752f64,
            Self::Lu176 => 175.9426897f64,
            Self::Lu177 => 176.9437615f64,
            Self::Lu178 => 177.945958f64,
            Self::Lu179 => 178.9473309f64,
            Self::Lu180 => 179.949888f64,
            Self::Lu181 => 180.95191f64,
            Self::Lu182 => 181.95504f64,
            Self::Lu183 => 182.957363f64,
            Self::Lu184 => 183.96091f64,
            Self::Lu185 => 184.96362f64,
        }
    }
}
impl super::ElementVariant for LutetiumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Lu
    }
}
impl super::MassNumber for LutetiumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Lu150 => 150u16,
            Self::Lu151 => 151u16,
            Self::Lu152 => 152u16,
            Self::Lu153 => 153u16,
            Self::Lu154 => 154u16,
            Self::Lu155 => 155u16,
            Self::Lu156 => 156u16,
            Self::Lu157 => 157u16,
            Self::Lu158 => 158u16,
            Self::Lu159 => 159u16,
            Self::Lu160 => 160u16,
            Self::Lu161 => 161u16,
            Self::Lu162 => 162u16,
            Self::Lu163 => 163u16,
            Self::Lu164 => 164u16,
            Self::Lu165 => 165u16,
            Self::Lu166 => 166u16,
            Self::Lu167 => 167u16,
            Self::Lu168 => 168u16,
            Self::Lu169 => 169u16,
            Self::Lu170 => 170u16,
            Self::Lu171 => 171u16,
            Self::Lu172 => 172u16,
            Self::Lu173 => 173u16,
            Self::Lu174 => 174u16,
            Self::Lu175 => 175u16,
            Self::Lu176 => 176u16,
            Self::Lu177 => 177u16,
            Self::Lu178 => 178u16,
            Self::Lu179 => 179u16,
            Self::Lu180 => 180u16,
            Self::Lu181 => 181u16,
            Self::Lu182 => 182u16,
            Self::Lu183 => 183u16,
            Self::Lu184 => 184u16,
            Self::Lu185 => 185u16,
        }
    }
}
impl super::IsotopicComposition for LutetiumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Lu150 => None,
            Self::Lu151 => None,
            Self::Lu152 => None,
            Self::Lu153 => None,
            Self::Lu154 => None,
            Self::Lu155 => None,
            Self::Lu156 => None,
            Self::Lu157 => None,
            Self::Lu158 => None,
            Self::Lu159 => None,
            Self::Lu160 => None,
            Self::Lu161 => None,
            Self::Lu162 => None,
            Self::Lu163 => None,
            Self::Lu164 => None,
            Self::Lu165 => None,
            Self::Lu166 => None,
            Self::Lu167 => None,
            Self::Lu168 => None,
            Self::Lu169 => None,
            Self::Lu170 => None,
            Self::Lu171 => None,
            Self::Lu172 => None,
            Self::Lu173 => None,
            Self::Lu174 => None,
            Self::Lu175 => Some(0.97401f64),
            Self::Lu176 => Some(0.02599f64),
            Self::Lu177 => None,
            Self::Lu178 => None,
            Self::Lu179 => None,
            Self::Lu180 => None,
            Self::Lu181 => None,
            Self::Lu182 => None,
            Self::Lu183 => None,
            Self::Lu184 => None,
            Self::Lu185 => None,
        }
    }
}
impl super::MostAbundantIsotope for LutetiumIsotope {
    fn most_abundant_isotope() -> Self {
        Self::Lu175
    }
}
impl std::fmt::Display for LutetiumIsotope {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Self::Lu150 => write!(f, "Lu150"),
            Self::Lu151 => write!(f, "Lu151"),
            Self::Lu152 => write!(f, "Lu152"),
            Self::Lu153 => write!(f, "Lu153"),
            Self::Lu154 => write!(f, "Lu154"),
            Self::Lu155 => write!(f, "Lu155"),
            Self::Lu156 => write!(f, "Lu156"),
            Self::Lu157 => write!(f, "Lu157"),
            Self::Lu158 => write!(f, "Lu158"),
            Self::Lu159 => write!(f, "Lu159"),
            Self::Lu160 => write!(f, "Lu160"),
            Self::Lu161 => write!(f, "Lu161"),
            Self::Lu162 => write!(f, "Lu162"),
            Self::Lu163 => write!(f, "Lu163"),
            Self::Lu164 => write!(f, "Lu164"),
            Self::Lu165 => write!(f, "Lu165"),
            Self::Lu166 => write!(f, "Lu166"),
            Self::Lu167 => write!(f, "Lu167"),
            Self::Lu168 => write!(f, "Lu168"),
            Self::Lu169 => write!(f, "Lu169"),
            Self::Lu170 => write!(f, "Lu170"),
            Self::Lu171 => write!(f, "Lu171"),
            Self::Lu172 => write!(f, "Lu172"),
            Self::Lu173 => write!(f, "Lu173"),
            Self::Lu174 => write!(f, "Lu174"),
            Self::Lu175 => write!(f, "Lu175"),
            Self::Lu176 => write!(f, "Lu176"),
            Self::Lu177 => write!(f, "Lu177"),
            Self::Lu178 => write!(f, "Lu178"),
            Self::Lu179 => write!(f, "Lu179"),
            Self::Lu180 => write!(f, "Lu180"),
            Self::Lu181 => write!(f, "Lu181"),
            Self::Lu182 => write!(f, "Lu182"),
            Self::Lu183 => write!(f, "Lu183"),
            Self::Lu184 => write!(f, "Lu184"),
            Self::Lu185 => write!(f, "Lu185"),
        }
    }
}
