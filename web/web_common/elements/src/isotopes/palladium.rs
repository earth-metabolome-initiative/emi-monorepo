#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum PalladiumIsotope {
    Pd91,
    Pd92,
    Pd93,
    Pd94,
    Pd95,
    Pd96,
    Pd97,
    Pd98,
    Pd99,
    Pd100,
    Pd101,
    Pd102,
    Pd103,
    Pd104,
    Pd105,
    Pd106,
    Pd107,
    Pd108,
    Pd109,
    Pd110,
    Pd111,
    Pd112,
    Pd113,
    Pd114,
    Pd115,
    Pd116,
    Pd117,
    Pd118,
    Pd119,
    Pd120,
    Pd121,
    Pd122,
    Pd123,
    Pd124,
    Pd125,
    Pd126,
    Pd127,
    Pd128,
}
impl super::RelativeAtomicMass for PalladiumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Pd91 => 90.95032f64,
            Self::Pd92 => 91.94088f64,
            Self::Pd93 => 92.93651f64,
            Self::Pd94 => 93.9290376f64,
            Self::Pd95 => 94.9248898f64,
            Self::Pd96 => 95.9182151f64,
            Self::Pd97 => 96.916472f64,
            Self::Pd98 => 97.9126983f64,
            Self::Pd99 => 98.9117748f64,
            Self::Pd100 => 99.908505f64,
            Self::Pd101 => 100.9082864f64,
            Self::Pd102 => 101.9056022f64,
            Self::Pd103 => 102.9060809f64,
            Self::Pd104 => 103.9040305f64,
            Self::Pd105 => 104.9050796f64,
            Self::Pd106 => 105.9034804f64,
            Self::Pd107 => 106.9051282f64,
            Self::Pd108 => 107.9038916f64,
            Self::Pd109 => 108.9059504f64,
            Self::Pd110 => 109.9051722f64,
            Self::Pd111 => 110.90768968f64,
            Self::Pd112 => 111.9073297f64,
            Self::Pd113 => 112.910261f64,
            Self::Pd114 => 113.9103686f64,
            Self::Pd115 => 114.913659f64,
            Self::Pd116 => 115.914297f64,
            Self::Pd117 => 116.9179547f64,
            Self::Pd118 => 117.9190667f64,
            Self::Pd119 => 118.9233402f64,
            Self::Pd120 => 119.9245511f64,
            Self::Pd121 => 120.9289503f64,
            Self::Pd122 => 121.930632f64,
            Self::Pd123 => 122.93514f64,
            Self::Pd124 => 123.93714f64,
            Self::Pd125 => 124.94179f64,
            Self::Pd126 => 125.94416f64,
            Self::Pd127 => 126.94907f64,
            Self::Pd128 => 127.95183f64,
        }
    }
}
impl super::ElementVariant for PalladiumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Pd
    }
}
impl super::MassNumber for PalladiumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Pd91 => 91u16,
            Self::Pd92 => 92u16,
            Self::Pd93 => 93u16,
            Self::Pd94 => 94u16,
            Self::Pd95 => 95u16,
            Self::Pd96 => 96u16,
            Self::Pd97 => 97u16,
            Self::Pd98 => 98u16,
            Self::Pd99 => 99u16,
            Self::Pd100 => 100u16,
            Self::Pd101 => 101u16,
            Self::Pd102 => 102u16,
            Self::Pd103 => 103u16,
            Self::Pd104 => 104u16,
            Self::Pd105 => 105u16,
            Self::Pd106 => 106u16,
            Self::Pd107 => 107u16,
            Self::Pd108 => 108u16,
            Self::Pd109 => 109u16,
            Self::Pd110 => 110u16,
            Self::Pd111 => 111u16,
            Self::Pd112 => 112u16,
            Self::Pd113 => 113u16,
            Self::Pd114 => 114u16,
            Self::Pd115 => 115u16,
            Self::Pd116 => 116u16,
            Self::Pd117 => 117u16,
            Self::Pd118 => 118u16,
            Self::Pd119 => 119u16,
            Self::Pd120 => 120u16,
            Self::Pd121 => 121u16,
            Self::Pd122 => 122u16,
            Self::Pd123 => 123u16,
            Self::Pd124 => 124u16,
            Self::Pd125 => 125u16,
            Self::Pd126 => 126u16,
            Self::Pd127 => 127u16,
            Self::Pd128 => 128u16,
        }
    }
}
impl super::IsotopicComposition for PalladiumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Pd91 => None,
            Self::Pd92 => None,
            Self::Pd93 => None,
            Self::Pd94 => None,
            Self::Pd95 => None,
            Self::Pd96 => None,
            Self::Pd97 => None,
            Self::Pd98 => None,
            Self::Pd99 => None,
            Self::Pd100 => None,
            Self::Pd101 => None,
            Self::Pd102 => Some(0.0102f64),
            Self::Pd103 => None,
            Self::Pd104 => Some(0.1114f64),
            Self::Pd105 => Some(0.2233f64),
            Self::Pd106 => Some(0.2733f64),
            Self::Pd107 => None,
            Self::Pd108 => Some(0.2646f64),
            Self::Pd109 => None,
            Self::Pd110 => Some(0.1172f64),
            Self::Pd111 => None,
            Self::Pd112 => None,
            Self::Pd113 => None,
            Self::Pd114 => None,
            Self::Pd115 => None,
            Self::Pd116 => None,
            Self::Pd117 => None,
            Self::Pd118 => None,
            Self::Pd119 => None,
            Self::Pd120 => None,
            Self::Pd121 => None,
            Self::Pd122 => None,
            Self::Pd123 => None,
            Self::Pd124 => None,
            Self::Pd125 => None,
            Self::Pd126 => None,
            Self::Pd127 => None,
            Self::Pd128 => None,
        }
    }
}
impl super::MostCommonIsotope for PalladiumIsotope {
    fn most_common_isotope() -> Self {
        Self::Pd106
    }
}
