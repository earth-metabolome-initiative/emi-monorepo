#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum ThalliumIsotope {
    Tl176,
    Tl177,
    Tl178,
    Tl179,
    Tl180,
    Tl181,
    Tl182,
    Tl183,
    Tl184,
    Tl185,
    Tl186,
    Tl187,
    Tl188,
    Tl189,
    Tl190,
    Tl191,
    Tl192,
    Tl193,
    Tl194,
    Tl195,
    Tl196,
    Tl197,
    Tl198,
    Tl199,
    Tl200,
    Tl201,
    Tl202,
    Tl203,
    Tl204,
    Tl205,
    Tl206,
    Tl207,
    Tl208,
    Tl209,
    Tl210,
    Tl211,
    Tl212,
    Tl213,
    Tl214,
    Tl215,
    Tl216,
    Tl217,
    Tl218,
}
impl super::RelativeAtomicMass for ThalliumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Tl176 => 176.000624f64,
            Self::Tl177 => 176.996431f64,
            Self::Tl178 => 177.99485f64,
            Self::Tl179 => 178.991111f64,
            Self::Tl180 => 179.990057f64,
            Self::Tl181 => 180.98626f64,
            Self::Tl182 => 181.985713f64,
            Self::Tl183 => 182.982193f64,
            Self::Tl184 => 183.981886f64,
            Self::Tl185 => 184.978789f64,
            Self::Tl186 => 185.978651f64,
            Self::Tl187 => 186.9759063f64,
            Self::Tl188 => 187.976021f64,
            Self::Tl189 => 188.973588f64,
            Self::Tl190 => 189.973828f64,
            Self::Tl191 => 190.9717842f64,
            Self::Tl192 => 191.972225f64,
            Self::Tl193 => 192.970502f64,
            Self::Tl194 => 193.971081f64,
            Self::Tl195 => 194.969774f64,
            Self::Tl196 => 195.970481f64,
            Self::Tl197 => 196.969576f64,
            Self::Tl198 => 197.970483f64,
            Self::Tl199 => 198.969877f64,
            Self::Tl200 => 199.9709633f64,
            Self::Tl201 => 200.970822f64,
            Self::Tl202 => 201.972102f64,
            Self::Tl203 => 202.9723446f64,
            Self::Tl204 => 203.9738639f64,
            Self::Tl205 => 204.9744278f64,
            Self::Tl206 => 205.9761106f64,
            Self::Tl207 => 206.9774197f64,
            Self::Tl208 => 207.982019f64,
            Self::Tl209 => 208.9853594f64,
            Self::Tl210 => 209.990074f64,
            Self::Tl211 => 210.993475f64,
            Self::Tl212 => 211.99834f64,
            Self::Tl213 => 213.001915f64,
            Self::Tl214 => 214.00694f64,
            Self::Tl215 => 215.01064f64,
            Self::Tl216 => 216.0158f64,
            Self::Tl217 => 217.01966f64,
            Self::Tl218 => 218.02479f64,
        }
    }
}
impl super::ElementVariant for ThalliumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Tl
    }
}
impl super::MassNumber for ThalliumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Tl176 => 176u16,
            Self::Tl177 => 177u16,
            Self::Tl178 => 178u16,
            Self::Tl179 => 179u16,
            Self::Tl180 => 180u16,
            Self::Tl181 => 181u16,
            Self::Tl182 => 182u16,
            Self::Tl183 => 183u16,
            Self::Tl184 => 184u16,
            Self::Tl185 => 185u16,
            Self::Tl186 => 186u16,
            Self::Tl187 => 187u16,
            Self::Tl188 => 188u16,
            Self::Tl189 => 189u16,
            Self::Tl190 => 190u16,
            Self::Tl191 => 191u16,
            Self::Tl192 => 192u16,
            Self::Tl193 => 193u16,
            Self::Tl194 => 194u16,
            Self::Tl195 => 195u16,
            Self::Tl196 => 196u16,
            Self::Tl197 => 197u16,
            Self::Tl198 => 198u16,
            Self::Tl199 => 199u16,
            Self::Tl200 => 200u16,
            Self::Tl201 => 201u16,
            Self::Tl202 => 202u16,
            Self::Tl203 => 203u16,
            Self::Tl204 => 204u16,
            Self::Tl205 => 205u16,
            Self::Tl206 => 206u16,
            Self::Tl207 => 207u16,
            Self::Tl208 => 208u16,
            Self::Tl209 => 209u16,
            Self::Tl210 => 210u16,
            Self::Tl211 => 211u16,
            Self::Tl212 => 212u16,
            Self::Tl213 => 213u16,
            Self::Tl214 => 214u16,
            Self::Tl215 => 215u16,
            Self::Tl216 => 216u16,
            Self::Tl217 => 217u16,
            Self::Tl218 => 218u16,
        }
    }
}
impl super::IsotopicComposition for ThalliumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Tl176 => None,
            Self::Tl177 => None,
            Self::Tl178 => None,
            Self::Tl179 => None,
            Self::Tl180 => None,
            Self::Tl181 => None,
            Self::Tl182 => None,
            Self::Tl183 => None,
            Self::Tl184 => None,
            Self::Tl185 => None,
            Self::Tl186 => None,
            Self::Tl187 => None,
            Self::Tl188 => None,
            Self::Tl189 => None,
            Self::Tl190 => None,
            Self::Tl191 => None,
            Self::Tl192 => None,
            Self::Tl193 => None,
            Self::Tl194 => None,
            Self::Tl195 => None,
            Self::Tl196 => None,
            Self::Tl197 => None,
            Self::Tl198 => None,
            Self::Tl199 => None,
            Self::Tl200 => None,
            Self::Tl201 => None,
            Self::Tl202 => None,
            Self::Tl203 => Some(0.2952f64),
            Self::Tl204 => None,
            Self::Tl205 => Some(0.7048f64),
            Self::Tl206 => None,
            Self::Tl207 => None,
            Self::Tl208 => None,
            Self::Tl209 => None,
            Self::Tl210 => None,
            Self::Tl211 => None,
            Self::Tl212 => None,
            Self::Tl213 => None,
            Self::Tl214 => None,
            Self::Tl215 => None,
            Self::Tl216 => None,
            Self::Tl217 => None,
            Self::Tl218 => None,
        }
    }
}
impl super::MostCommonIsotope for ThalliumIsotope {
    fn most_common_isotope() -> Self {
        Self::Tl205
    }
}
