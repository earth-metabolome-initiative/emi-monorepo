//! Submodule implementing the `FromStr` trait for the `Element` enum.

use std::str::FromStr;


impl FromStr for crate::Element {
    type Err = crate::errors::UnknownElement;

    fn from_str(value: &str) -> Result<Self, Self::Err> {
        Ok(match value {
            "H" => Self::H,
            "He" => Self::He,
            "Li" => Self::Li,
            "Be" => Self::Be,
            "B" => Self::B,
            "C" => Self::C,
            "N" => Self::N,
            "O" => Self::O,
            "F" => Self::F,
            "Ne" => Self::Ne,
            "Na" => Self::Na,
            "Mg" => Self::Mg,
            "Al" => Self::Al,
            "Si" => Self::Si,
            "P" => Self::P,
            "S" => Self::S,
            "Cl" => Self::Cl,
            "Ar" => Self::Ar,
            "K" => Self::K,
            "Ca" => Self::Ca,
            "Sc" => Self::Sc,
            "Ti" => Self::Ti,
            "V" => Self::V,
            "Cr" => Self::Cr,
            "Mn" => Self::Mn,
            "Fe" => Self::Fe,
            "Co" => Self::Co,
            "Ni" => Self::Ni,
            "Cu" => Self::Cu,
            "Zn" => Self::Zn,
            "Ga" => Self::Ga,
            "Ge" => Self::Ge,
            "As" => Self::As,
            "Se" => Self::Se,
            "Br" => Self::Br,
            "Kr" => Self::Kr,
            "Rb" => Self::Rb,
            "Sr" => Self::Sr,
            "Y" => Self::Y,
            "Zr" => Self::Zr,
            "Nb" => Self::Nb,
            "Mo" => Self::Mo,
            "Tc" => Self::Tc,
            "Ru" => Self::Ru,
            "Rh" => Self::Rh,
            "Pd" => Self::Pd,
            "Ag" => Self::Ag,
            "Cd" => Self::Cd,
            "In" => Self::In,
            "Sn" => Self::Sn,
            "Sb" => Self::Sb,
            "Te" => Self::Te,
            "I" => Self::I,
            "Xe" => Self::Xe,
            "Cs" => Self::Cs,
            "Ba" => Self::Ba,
            "La" => Self::La,
            "Ce" => Self::Ce,
            "Pr" => Self::Pr,
            "Nd" => Self::Nd,
            "Pm" => Self::Pm,
            "Sm" => Self::Sm,
            "Eu" => Self::Eu,
            "Gd" => Self::Gd,
            "Tb" => Self::Tb,
            "Dy" => Self::Dy,
            "Ho" => Self::Ho,
            "Er" => Self::Er,
            "Tm" => Self::Tm,
            "Yb" => Self::Yb,
            "Lu" => Self::Lu,
            "Hf" => Self::Hf,
            "Ta" => Self::Ta,
            "W" => Self::W,
            "Re" => Self::Re,
            "Os" => Self::Os,
            "Ir" => Self::Ir,
            "Pt" => Self::Pt,
            "Au" => Self::Au,
            "Hg" => Self::Hg,
            "Tl" => Self::Tl,
            "Pb" => Self::Pb,
            "Bi" => Self::Bi,
            "Po" => Self::Po,
            "At" => Self::At,
            "Rn" => Self::Rn,
            "Fr" => Self::Fr,
            "Ra" => Self::Ra,
            "Ac" => Self::Ac,
            "Th" => Self::Th,
            "Pa" => Self::Pa,
            "U" => Self::U,
            "Np" => Self::Np,
            "Pu" => Self::Pu,
            "Am" => Self::Am,
            "Cm" => Self::Cm,
            "Bk" => Self::Bk,
            "Cf" => Self::Cf,
            "Es" => Self::Es,
            "Fm" => Self::Fm,
            "Md" => Self::Md,
            "No" => Self::No,
            "Lr" => Self::Lr,
            "Rf" => Self::Rf,
            "Db" => Self::Db,
            "Sg" => Self::Sg,
            "Bh" => Self::Bh,
            "Hs" => Self::Hs,
            "Mt" => Self::Mt,
            "Ds" => Self::Ds,
            "Rg" => Self::Rg,
            "Cn" => Self::Cn,
            "Nh" => Self::Nh,
            "Fl" => Self::Fl,
            "Mc" => Self::Mc,
            "Lv" => Self::Lv,
            "Ts" => Self::Ts,
            "Og" => Self::Og,
            _ => {
                return Err(crate::errors::UnknownElement::Unknown(value.to_string()));
            }
        })
    }
}