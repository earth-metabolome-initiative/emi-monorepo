#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum PraseodymiumIsotope {
    Pr121,
    Pr122,
    Pr123,
    Pr124,
    Pr125,
    Pr126,
    Pr127,
    Pr128,
    Pr129,
    Pr130,
    Pr131,
    Pr132,
    Pr133,
    Pr134,
    Pr135,
    Pr136,
    Pr137,
    Pr138,
    Pr139,
    Pr140,
    Pr141,
    Pr142,
    Pr143,
    Pr144,
    Pr145,
    Pr146,
    Pr147,
    Pr148,
    Pr149,
    Pr150,
    Pr151,
    Pr152,
    Pr153,
    Pr154,
    Pr155,
    Pr156,
    Pr157,
    Pr158,
    Pr159,
}
impl super::RelativeAtomicMass for PraseodymiumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Pr121 => 120.95532f64,
            Self::Pr122 => 121.95175f64,
            Self::Pr123 => 122.94596f64,
            Self::Pr124 => 123.94294f64,
            Self::Pr125 => 124.9377f64,
            Self::Pr126 => 125.93524f64,
            Self::Pr127 => 126.93071f64,
            Self::Pr128 => 127.928791f64,
            Self::Pr129 => 128.925095f64,
            Self::Pr130 => 129.92359f64,
            Self::Pr131 => 130.920235f64,
            Self::Pr132 => 131.919255f64,
            Self::Pr133 => 132.916331f64,
            Self::Pr134 => 133.915697f64,
            Self::Pr135 => 134.913112f64,
            Self::Pr136 => 135.912677f64,
            Self::Pr137 => 136.9106792f64,
            Self::Pr138 => 137.910754f64,
            Self::Pr139 => 138.9089408f64,
            Self::Pr140 => 139.9090803f64,
            Self::Pr141 => 140.9076576f64,
            Self::Pr142 => 141.9100496f64,
            Self::Pr143 => 142.9108228f64,
            Self::Pr144 => 143.9133109f64,
            Self::Pr145 => 144.9145182f64,
            Self::Pr146 => 145.91768f64,
            Self::Pr147 => 146.919008f64,
            Self::Pr148 => 147.92213f64,
            Self::Pr149 => 148.923736f64,
            Self::Pr150 => 149.9266765f64,
            Self::Pr151 => 150.928309f64,
            Self::Pr152 => 151.931553f64,
            Self::Pr153 => 152.933904f64,
            Self::Pr154 => 153.93753f64,
            Self::Pr155 => 154.940509f64,
            Self::Pr156 => 155.94464f64,
            Self::Pr157 => 156.94789f64,
            Self::Pr158 => 157.95241f64,
            Self::Pr159 => 158.95589f64,
        }
    }
}
impl super::ElementVariant for PraseodymiumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Pr
    }
}
impl super::MassNumber for PraseodymiumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Pr121 => 121u16,
            Self::Pr122 => 122u16,
            Self::Pr123 => 123u16,
            Self::Pr124 => 124u16,
            Self::Pr125 => 125u16,
            Self::Pr126 => 126u16,
            Self::Pr127 => 127u16,
            Self::Pr128 => 128u16,
            Self::Pr129 => 129u16,
            Self::Pr130 => 130u16,
            Self::Pr131 => 131u16,
            Self::Pr132 => 132u16,
            Self::Pr133 => 133u16,
            Self::Pr134 => 134u16,
            Self::Pr135 => 135u16,
            Self::Pr136 => 136u16,
            Self::Pr137 => 137u16,
            Self::Pr138 => 138u16,
            Self::Pr139 => 139u16,
            Self::Pr140 => 140u16,
            Self::Pr141 => 141u16,
            Self::Pr142 => 142u16,
            Self::Pr143 => 143u16,
            Self::Pr144 => 144u16,
            Self::Pr145 => 145u16,
            Self::Pr146 => 146u16,
            Self::Pr147 => 147u16,
            Self::Pr148 => 148u16,
            Self::Pr149 => 149u16,
            Self::Pr150 => 150u16,
            Self::Pr151 => 151u16,
            Self::Pr152 => 152u16,
            Self::Pr153 => 153u16,
            Self::Pr154 => 154u16,
            Self::Pr155 => 155u16,
            Self::Pr156 => 156u16,
            Self::Pr157 => 157u16,
            Self::Pr158 => 158u16,
            Self::Pr159 => 159u16,
        }
    }
}
impl super::IsotopicComposition for PraseodymiumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Pr121 => None,
            Self::Pr122 => None,
            Self::Pr123 => None,
            Self::Pr124 => None,
            Self::Pr125 => None,
            Self::Pr126 => None,
            Self::Pr127 => None,
            Self::Pr128 => None,
            Self::Pr129 => None,
            Self::Pr130 => None,
            Self::Pr131 => None,
            Self::Pr132 => None,
            Self::Pr133 => None,
            Self::Pr134 => None,
            Self::Pr135 => None,
            Self::Pr136 => None,
            Self::Pr137 => None,
            Self::Pr138 => None,
            Self::Pr139 => None,
            Self::Pr140 => None,
            Self::Pr141 => Some(1f64),
            Self::Pr142 => None,
            Self::Pr143 => None,
            Self::Pr144 => None,
            Self::Pr145 => None,
            Self::Pr146 => None,
            Self::Pr147 => None,
            Self::Pr148 => None,
            Self::Pr149 => None,
            Self::Pr150 => None,
            Self::Pr151 => None,
            Self::Pr152 => None,
            Self::Pr153 => None,
            Self::Pr154 => None,
            Self::Pr155 => None,
            Self::Pr156 => None,
            Self::Pr157 => None,
            Self::Pr158 => None,
            Self::Pr159 => None,
        }
    }
}
impl super::MostCommonIsotope for PraseodymiumIsotope {
    fn most_common_isotope() -> Self {
        Self::Pr141
    }
}
