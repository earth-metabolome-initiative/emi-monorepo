#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum PlatinumIsotope {
    Pt166,
    Pt167,
    Pt168,
    Pt169,
    Pt170,
    Pt171,
    Pt172,
    Pt173,
    Pt174,
    Pt175,
    Pt176,
    Pt177,
    Pt178,
    Pt179,
    Pt180,
    Pt181,
    Pt182,
    Pt183,
    Pt184,
    Pt185,
    Pt186,
    Pt187,
    Pt188,
    Pt189,
    Pt190,
    Pt191,
    Pt192,
    Pt193,
    Pt194,
    Pt195,
    Pt196,
    Pt197,
    Pt198,
    Pt199,
    Pt200,
    Pt201,
    Pt202,
    Pt203,
    Pt204,
    Pt205,
    Pt206,
}
impl super::RelativeAtomicMass for PlatinumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Pt166 => 165.99486f64,
            Self::Pt167 => 166.99269f64,
            Self::Pt168 => 167.98813f64,
            Self::Pt169 => 168.98657f64,
            Self::Pt170 => 169.982496f64,
            Self::Pt171 => 170.981245f64,
            Self::Pt172 => 171.977351f64,
            Self::Pt173 => 172.976443f64,
            Self::Pt174 => 173.97282f64,
            Self::Pt175 => 174.97241f64,
            Self::Pt176 => 175.968938f64,
            Self::Pt177 => 176.96847f64,
            Self::Pt178 => 177.96565f64,
            Self::Pt179 => 178.965359f64,
            Self::Pt180 => 179.963032f64,
            Self::Pt181 => 180.963098f64,
            Self::Pt182 => 181.961172f64,
            Self::Pt183 => 182.961597f64,
            Self::Pt184 => 183.959915f64,
            Self::Pt185 => 184.960614f64,
            Self::Pt186 => 185.959351f64,
            Self::Pt187 => 186.960617f64,
            Self::Pt188 => 187.9593889f64,
            Self::Pt189 => 188.960831f64,
            Self::Pt190 => 189.9599297f64,
            Self::Pt191 => 190.9616729f64,
            Self::Pt192 => 191.9610387f64,
            Self::Pt193 => 192.9629824f64,
            Self::Pt194 => 193.9626809f64,
            Self::Pt195 => 194.9647917f64,
            Self::Pt196 => 195.96495209f64,
            Self::Pt197 => 196.96734069f64,
            Self::Pt198 => 197.9678949f64,
            Self::Pt199 => 198.9705952f64,
            Self::Pt200 => 199.971443f64,
            Self::Pt201 => 200.974513f64,
            Self::Pt202 => 201.975639f64,
            Self::Pt203 => 202.97893f64,
            Self::Pt204 => 203.98076f64,
            Self::Pt205 => 204.98608f64,
            Self::Pt206 => 205.98966f64,
        }
    }
}
impl super::ElementVariant for PlatinumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Pt
    }
}
impl super::MassNumber for PlatinumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Pt166 => 166u16,
            Self::Pt167 => 167u16,
            Self::Pt168 => 168u16,
            Self::Pt169 => 169u16,
            Self::Pt170 => 170u16,
            Self::Pt171 => 171u16,
            Self::Pt172 => 172u16,
            Self::Pt173 => 173u16,
            Self::Pt174 => 174u16,
            Self::Pt175 => 175u16,
            Self::Pt176 => 176u16,
            Self::Pt177 => 177u16,
            Self::Pt178 => 178u16,
            Self::Pt179 => 179u16,
            Self::Pt180 => 180u16,
            Self::Pt181 => 181u16,
            Self::Pt182 => 182u16,
            Self::Pt183 => 183u16,
            Self::Pt184 => 184u16,
            Self::Pt185 => 185u16,
            Self::Pt186 => 186u16,
            Self::Pt187 => 187u16,
            Self::Pt188 => 188u16,
            Self::Pt189 => 189u16,
            Self::Pt190 => 190u16,
            Self::Pt191 => 191u16,
            Self::Pt192 => 192u16,
            Self::Pt193 => 193u16,
            Self::Pt194 => 194u16,
            Self::Pt195 => 195u16,
            Self::Pt196 => 196u16,
            Self::Pt197 => 197u16,
            Self::Pt198 => 198u16,
            Self::Pt199 => 199u16,
            Self::Pt200 => 200u16,
            Self::Pt201 => 201u16,
            Self::Pt202 => 202u16,
            Self::Pt203 => 203u16,
            Self::Pt204 => 204u16,
            Self::Pt205 => 205u16,
            Self::Pt206 => 206u16,
        }
    }
}
impl super::IsotopicComposition for PlatinumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Pt166 => None,
            Self::Pt167 => None,
            Self::Pt168 => None,
            Self::Pt169 => None,
            Self::Pt170 => None,
            Self::Pt171 => None,
            Self::Pt172 => None,
            Self::Pt173 => None,
            Self::Pt174 => None,
            Self::Pt175 => None,
            Self::Pt176 => None,
            Self::Pt177 => None,
            Self::Pt178 => None,
            Self::Pt179 => None,
            Self::Pt180 => None,
            Self::Pt181 => None,
            Self::Pt182 => None,
            Self::Pt183 => None,
            Self::Pt184 => None,
            Self::Pt185 => None,
            Self::Pt186 => None,
            Self::Pt187 => None,
            Self::Pt188 => None,
            Self::Pt189 => None,
            Self::Pt190 => Some(0.00012f64),
            Self::Pt191 => None,
            Self::Pt192 => Some(0.00782f64),
            Self::Pt193 => None,
            Self::Pt194 => Some(0.3286f64),
            Self::Pt195 => Some(0.3378f64),
            Self::Pt196 => Some(0.2521f64),
            Self::Pt197 => None,
            Self::Pt198 => Some(0.07356f64),
            Self::Pt199 => None,
            Self::Pt200 => None,
            Self::Pt201 => None,
            Self::Pt202 => None,
            Self::Pt203 => None,
            Self::Pt204 => None,
            Self::Pt205 => None,
            Self::Pt206 => None,
        }
    }
}
impl super::MostCommonIsotope for PlatinumIsotope {
    fn most_common_isotope() -> Self {
        Self::Pt195
    }
}
