/* <begin connected objects> */
/*
This file is auto generated by pgrx.

The ordering of items is not stable, it is driven by a dependency graph.
*/
/* </end connected objects> */

/* <begin connected objects> */
-- utils/diesel-pgrx/example_extension/src/lib.rs:8
-- example_extension::PositiveU32
CREATE TYPE PositiveU32;

-- utils/diesel-pgrx/example_extension/src/lib.rs:8
-- example_extension::positiveu32_in
CREATE  FUNCTION "positiveu32_in"(
	"input" cstring /* core::option::Option<&core::ffi::c_str::CStr> */
) RETURNS PositiveU32 /* core::option::Option<example_extension::PositiveU32> */
IMMUTABLE PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'positiveu32_in_wrapper';

-- utils/diesel-pgrx/example_extension/src/lib.rs:8
-- example_extension::positiveu32_out
CREATE  FUNCTION "positiveu32_out"(
	"input" PositiveU32 /* example_extension::PositiveU32 */
) RETURNS cstring /* alloc::ffi::c_str::CString */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'positiveu32_out_wrapper';

-- utils/diesel-pgrx/example_extension/src/lib.rs:8
-- example_extension::positiveu32_recv
CREATE  FUNCTION "positiveu32_recv"(
	"internal" internal /* pgrx::datum::internal::Internal */
) RETURNS PositiveU32 /* example_extension::PositiveU32 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'positiveu32_recv_wrapper';

-- utils/diesel-pgrx/example_extension/src/lib.rs:8
-- example_extension::positiveu32_send
CREATE  FUNCTION "positiveu32_send"(
	"input" PositiveU32 /* example_extension::PositiveU32 */
) RETURNS bytea /* alloc::vec::Vec<u8> */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'positiveu32_send_wrapper';

-- utils/diesel-pgrx/example_extension/src/lib.rs:8
-- example_extension::PositiveU32
CREATE TYPE PositiveU32 (
	INTERNALLENGTH = variable,
	INPUT = positiveu32_in, /* example_extension::positiveu32_in */
	OUTPUT = positiveu32_out, /* example_extension::positiveu32_out */
	RECEIVE = positiveu32_recv, /* example_extension::positiveu32_recv */
	SEND = positiveu32_send, /* example_extension::positiveu32_send */
	STORAGE = extended
);
/* </end connected objects> */

/* <begin connected objects> */
-- utils/diesel-pgrx/example_extension/src/lib.rs:16
-- example_extension::validate_positive_u32
CREATE  FUNCTION "validate_positive_u32"(
	"value" PositiveU32 /* example_extension::PositiveU32 */
) RETURNS bool /* bool */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'validate_positive_u32_wrapper';
/* </end connected objects> */

