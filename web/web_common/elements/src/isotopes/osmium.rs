#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord, strum :: EnumIter)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "pgrx", derive(pgrx::PostgresEnum))]
pub enum OsmiumIsotope {
    Os161,
    Os162,
    Os163,
    Os164,
    Os165,
    Os166,
    Os167,
    Os168,
    Os169,
    Os170,
    Os171,
    Os172,
    Os173,
    Os174,
    Os175,
    Os176,
    Os177,
    Os178,
    Os179,
    Os180,
    Os181,
    Os182,
    Os183,
    Os184,
    Os185,
    Os186,
    Os187,
    Os188,
    Os189,
    Os190,
    Os191,
    Os192,
    Os193,
    Os194,
    Os195,
    Os196,
    Os197,
    Os198,
    Os199,
    Os200,
    Os201,
    Os202,
}
impl super::RelativeAtomicMass for OsmiumIsotope {
    fn relative_atomic_mass(&self) -> f64 {
        match self {
            Self::Os161 => 160.98903f64,
            Self::Os162 => 161.98443f64,
            Self::Os163 => 162.98241f64,
            Self::Os164 => 163.97802f64,
            Self::Os165 => 164.9766f64,
            Self::Os166 => 165.972692f64,
            Self::Os167 => 166.971549f64,
            Self::Os168 => 167.967808f64,
            Self::Os169 => 168.967018f64,
            Self::Os170 => 169.963578f64,
            Self::Os171 => 170.963174f64,
            Self::Os172 => 171.960017f64,
            Self::Os173 => 172.959808f64,
            Self::Os174 => 173.957064f64,
            Self::Os175 => 174.956945f64,
            Self::Os176 => 175.954806f64,
            Self::Os177 => 176.954966f64,
            Self::Os178 => 177.953254f64,
            Self::Os179 => 178.953817f64,
            Self::Os180 => 179.952375f64,
            Self::Os181 => 180.953247f64,
            Self::Os182 => 181.95211f64,
            Self::Os183 => 182.953125f64,
            Self::Os184 => 183.9524885f64,
            Self::Os185 => 184.9540417f64,
            Self::Os186 => 185.953835f64,
            Self::Os187 => 186.9557474f64,
            Self::Os188 => 187.9558352f64,
            Self::Os189 => 188.9581442f64,
            Self::Os190 => 189.9584437f64,
            Self::Os191 => 190.9609264f64,
            Self::Os192 => 191.961477f64,
            Self::Os193 => 192.9641479f64,
            Self::Os194 => 193.9651772f64,
            Self::Os195 => 194.968318f64,
            Self::Os196 => 195.969641f64,
            Self::Os197 => 196.97283f64,
            Self::Os198 => 197.97441f64,
            Self::Os199 => 198.97801f64,
            Self::Os200 => 199.97984f64,
            Self::Os201 => 200.98364f64,
            Self::Os202 => 201.98595f64,
        }
    }
}
impl super::ElementVariant for OsmiumIsotope {
    fn element(&self) -> crate::Element {
        crate::Element::Os
    }
}
impl super::MassNumber for OsmiumIsotope {
    fn mass_number(&self) -> u16 {
        match self {
            Self::Os161 => 161u16,
            Self::Os162 => 162u16,
            Self::Os163 => 163u16,
            Self::Os164 => 164u16,
            Self::Os165 => 165u16,
            Self::Os166 => 166u16,
            Self::Os167 => 167u16,
            Self::Os168 => 168u16,
            Self::Os169 => 169u16,
            Self::Os170 => 170u16,
            Self::Os171 => 171u16,
            Self::Os172 => 172u16,
            Self::Os173 => 173u16,
            Self::Os174 => 174u16,
            Self::Os175 => 175u16,
            Self::Os176 => 176u16,
            Self::Os177 => 177u16,
            Self::Os178 => 178u16,
            Self::Os179 => 179u16,
            Self::Os180 => 180u16,
            Self::Os181 => 181u16,
            Self::Os182 => 182u16,
            Self::Os183 => 183u16,
            Self::Os184 => 184u16,
            Self::Os185 => 185u16,
            Self::Os186 => 186u16,
            Self::Os187 => 187u16,
            Self::Os188 => 188u16,
            Self::Os189 => 189u16,
            Self::Os190 => 190u16,
            Self::Os191 => 191u16,
            Self::Os192 => 192u16,
            Self::Os193 => 193u16,
            Self::Os194 => 194u16,
            Self::Os195 => 195u16,
            Self::Os196 => 196u16,
            Self::Os197 => 197u16,
            Self::Os198 => 198u16,
            Self::Os199 => 199u16,
            Self::Os200 => 200u16,
            Self::Os201 => 201u16,
            Self::Os202 => 202u16,
        }
    }
}
impl super::IsotopicComposition for OsmiumIsotope {
    fn isotopic_composition(&self) -> Option<f64> {
        match self {
            Self::Os161 => None,
            Self::Os162 => None,
            Self::Os163 => None,
            Self::Os164 => None,
            Self::Os165 => None,
            Self::Os166 => None,
            Self::Os167 => None,
            Self::Os168 => None,
            Self::Os169 => None,
            Self::Os170 => None,
            Self::Os171 => None,
            Self::Os172 => None,
            Self::Os173 => None,
            Self::Os174 => None,
            Self::Os175 => None,
            Self::Os176 => None,
            Self::Os177 => None,
            Self::Os178 => None,
            Self::Os179 => None,
            Self::Os180 => None,
            Self::Os181 => None,
            Self::Os182 => None,
            Self::Os183 => None,
            Self::Os184 => Some(0.0002f64),
            Self::Os185 => None,
            Self::Os186 => Some(0.0159f64),
            Self::Os187 => Some(0.0196f64),
            Self::Os188 => Some(0.1324f64),
            Self::Os189 => Some(0.1615f64),
            Self::Os190 => Some(0.2626f64),
            Self::Os191 => None,
            Self::Os192 => Some(0.4078f64),
            Self::Os193 => None,
            Self::Os194 => None,
            Self::Os195 => None,
            Self::Os196 => None,
            Self::Os197 => None,
            Self::Os198 => None,
            Self::Os199 => None,
            Self::Os200 => None,
            Self::Os201 => None,
            Self::Os202 => None,
        }
    }
}
impl super::MostCommonIsotope for OsmiumIsotope {
    fn most_common_isotope() -> Self {
        Self::Os192
    }
}
