/* <begin connected objects> */
/*
This file is auto generated by pgrx.

The ordering of items is not stable, it is driven by a dependency graph.
*/
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::MolecularFormula
CREATE TYPE MolecularFormula;

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_in
CREATE  FUNCTION "molecularformula_in"(
	"input" cstring /* core::option::Option<&core::ffi::c_str::CStr> */
) RETURNS MolecularFormula /* core::option::Option<molecular_formula::molecular_formula::MolecularFormula> */
IMMUTABLE PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_in_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_out
CREATE  FUNCTION "molecularformula_out"(
	"input" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS cstring /* alloc::ffi::c_str::CString */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_out_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_recv
CREATE  FUNCTION "molecularformula_recv"(
	"internal" internal /* pgrx::datum::internal::Internal */
) RETURNS MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_recv_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_send
CREATE  FUNCTION "molecularformula_send"(
	"input" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bytea /* alloc::vec::Vec<u8> */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_send_wrapper';


-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::MolecularFormula
CREATE TYPE MolecularFormula (
	INTERNALLENGTH = variable,
	INPUT = molecularformula_in, /* molecular_formula::molecular_formula::molecularformula_in */
	OUTPUT = molecularformula_out, /* molecular_formula::molecular_formula::molecularformula_out */
	RECEIVE = molecularformula_recv, /* molecular_formula::molecular_formula::molecularformula_recv */
	SEND = molecularformula_send, /* molecular_formula::molecular_formula::molecularformula_send */
	STORAGE = extended
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_cmp
CREATE  FUNCTION "molecularformula_cmp"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS INT /* i32 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_cmp_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_eq
CREATE  FUNCTION "molecularformula_eq"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_eq_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_eq
CREATE OPERATOR = (
	PROCEDURE="molecularformula_eq",
	LEFTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	RIGHTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	COMMUTATOR = =,
	NEGATOR = <>,
	RESTRICT = eqsel,
	JOIN = eqjoinsel,
	HASHES,
	MERGES
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_ge
CREATE  FUNCTION "molecularformula_ge"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_ge_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_ge
CREATE OPERATOR >= (
	PROCEDURE="molecularformula_ge",
	LEFTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	RIGHTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	COMMUTATOR = <=,
	NEGATOR = <,
	RESTRICT = scalargesel,
	JOIN = scalargejoinsel
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_gt
CREATE  FUNCTION "molecularformula_gt"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_gt_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_gt
CREATE OPERATOR > (
	PROCEDURE="molecularformula_gt",
	LEFTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	RIGHTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	COMMUTATOR = <,
	NEGATOR = <=,
	RESTRICT = scalargtsel,
	JOIN = scalargtjoinsel
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_hash
CREATE  FUNCTION "molecularformula_hash"(
	"value" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS INT /* i32 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_hash_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_le
CREATE  FUNCTION "molecularformula_le"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_le_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_le
CREATE OPERATOR <= (
	PROCEDURE="molecularformula_le",
	LEFTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	RIGHTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	COMMUTATOR = >=,
	NEGATOR = >,
	RESTRICT = scalarlesel,
	JOIN = scalarlejoinsel
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_lt
CREATE  FUNCTION "molecularformula_lt"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_lt_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_lt
CREATE OPERATOR < (
	PROCEDURE="molecularformula_lt",
	LEFTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	RIGHTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	COMMUTATOR = >,
	NEGATOR = >=,
	RESTRICT = scalarltsel,
	JOIN = scalarltjoinsel
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_ne
CREATE  FUNCTION "molecularformula_ne"(
	"left" MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	"right" MolecularFormula /* molecular_formula::molecular_formula::MolecularFormula */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'molecularformula_ne_wrapper';

-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::molecularformula_ne
CREATE OPERATOR <> (
	PROCEDURE="molecularformula_ne",
	LEFTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	RIGHTARG=MolecularFormula, /* molecular_formula::molecular_formula::MolecularFormula */
	COMMUTATOR = <>,
	NEGATOR = =,
	RESTRICT = neqsel,
	JOIN = neqjoinsel
);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::MolecularFormula
CREATE OPERATOR FAMILY MolecularFormula_btree_ops USING btree;
CREATE OPERATOR CLASS MolecularFormula_btree_ops DEFAULT FOR TYPE MolecularFormula USING btree FAMILY MolecularFormula_btree_ops AS
	OPERATOR 1 <,
	OPERATOR 2 <=,
	OPERATOR 3 =,
	OPERATOR 4 >=,
	OPERATOR 5 >,
	FUNCTION 1 molecularformula_cmp(MolecularFormula, MolecularFormula);
/* </end connected objects> */

/* <begin connected objects> */
-- web/web_common/molecular_formula/src/molecular_formula.rs:29
-- molecular_formula::molecular_formula::MolecularFormula
CREATE OPERATOR FAMILY MolecularFormula_hash_ops USING hash;
CREATE OPERATOR CLASS MolecularFormula_hash_ops DEFAULT FOR TYPE MolecularFormula USING hash FAMILY MolecularFormula_hash_ops AS
	OPERATOR    1   =  (MolecularFormula, MolecularFormula),
	FUNCTION    1   molecularformula_hash(MolecularFormula);
/* </end connected objects> */

